{"ast":null,"code":"var _jsxFileName = \"/home/uchihaitachi/Desktop/project/navadipti/navadipti-teacher/frontend/src/Components/teacher/Modal/ModalComponentReply.js\";\nimport React, { Fragment } from 'react';\nimport Axios from 'axios';\nimport './ModalComponent.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default class ModalComponentReply extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      const modal = document.getElementById(\"myModalReply\");\n      modal.style.display = \"none\";\n    };\n\n    this.handleShow = () => {\n      const modal = document.getElementById(\"myModalReply\");\n      modal.style.display = \"block\";\n    };\n\n    this.notifyA = text => toast.success(text, {\n      containerId: 'A'\n    });\n\n    this.notifyB = text => toast.error(text, {\n      containerId: 'B'\n    });\n\n    this.state = {\n      show: false,\n      chat: {},\n      curDate: ''\n    };\n    this.addMessage = this.addMessage.bind(this);\n    this.getDate = this.getDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDate();\n  }\n\n  getDate() {\n    const tempDate = new Date();\n    let month;\n\n    if (tempDate.getMonth() + 1 > '9') {\n      month = tempDate.getMonth() + 1;\n    } else {\n      let n = tempDate.getMonth() + 1;\n      month = '0' + n;\n    }\n\n    const date = tempDate.getDate() + '-' + month + '-' + tempDate.getFullYear();\n    this.setState({\n      curDate: date\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      chat: nextProps.chat\n    };\n  }\n\n  addMessage() {\n    const mname = document.getElementById('mnameReply').value;\n    const mtext = document.getElementById('mtextReply').value;\n\n    if (mname && mtext) {\n      const message = {\n        name: mname,\n        text: mtext,\n        token: 'reply',\n        date: this.state.curDate\n      };\n      this.state.chat.reply.push(message);\n      console.log('Updated chat', this.state.chat);\n      Axios.put(\"/query/update\", {\n        data: this.state.chat\n      }).then(res => {\n        console.log(res.data.message);\n        document.getElementById('mresetReply').click();\n        Axios.get(\"/query/find\").then(res => {\n          console.log(res.data.message);\n          this.props.receive(res.data.body);\n          this.notifyA('Success');\n          const modal = document.getElementById(\"myModalReply\");\n          modal.style.display = \"none\";\n        });\n      }, err => {\n        console.log('Error');\n        this.notifyB('Error');\n      });\n    } else {\n      console.log('Error');\n      this.notifyB('Error');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"myBtnReply\",\n      onClick: this.handleShow,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Open Modal\"), /*#__PURE__*/React.createElement(ToastContainer, {\n      enableMultiContainer: true,\n      containerId: 'A',\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ToastContainer, {\n      enableMultiContainer: true,\n      containerId: 'B',\n      position: toast.POSITION.TOP_CENTER,\n      autoClose: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"myModalReply\",\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"closecontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, this.state.curDate, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"closeReply\",\n      className: \"close\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"mnameReply\",\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 79\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Text:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"mtextReply\",\n      cols: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark m-2\",\n      onClick: this.addMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-dark m-2\",\n      id: \"mresetReply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, \"Reset\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/uchihaitachi/Desktop/project/navadipti/navadipti-teacher/frontend/src/Components/teacher/Modal/ModalComponentReply.js"],"names":["React","Fragment","Axios","ToastContainer","toast","ModalComponentReply","Component","constructor","props","handleClose","modal","document","getElementById","style","display","handleShow","notifyA","text","success","containerId","notifyB","error","state","show","chat","curDate","addMessage","bind","getDate","componentDidMount","tempDate","Date","month","getMonth","n","date","getFullYear","setState","getDerivedStateFromProps","nextProps","prevState","mname","value","mtext","message","name","token","reply","push","console","log","put","data","then","res","click","get","receive","body","err","render","POSITION","TOP_CENTER"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Axios from 'axios';\nimport './ModalComponent.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class ModalComponentReply extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show: false,\n            chat: {},\n            curDate: ''\n        };\n        this.addMessage = this.addMessage.bind(this);\n        this.getDate = this.getDate.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDate();\n    }\n\n    getDate() {\n        const tempDate = new Date();\n        let month;\n        if((tempDate.getMonth()+1) > '9') {\n            month = tempDate.getMonth()+1;\n        } else {\n            let n = tempDate.getMonth()+1;\n            month = '0' + n;\n        }\n        const date = tempDate.getDate() + '-' + month + '-' + tempDate.getFullYear();\n        this.setState({\n            curDate: date\n        });\n    }\n\n    handleClose = () => {\n        const modal = document.getElementById(\"myModalReply\");\n        modal.style.display = \"none\";\n    }\n    handleShow = () => {\n        const modal = document.getElementById(\"myModalReply\");\n        modal.style.display = \"block\";\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        return ({\n          chat: nextProps.chat\n        });\n    }\n  \n    addMessage() {\n        const mname = document.getElementById('mnameReply').value;\n        const mtext = document.getElementById('mtextReply').value;\n        if(mname && mtext) {\n            const message = {name: mname, text: mtext, token: 'reply',date: this.state.curDate};\n            this.state.chat.reply.push(message);\n            console.log('Updated chat', this.state.chat);\n            Axios.put(\"/query/update\", {data: this.state.chat})\n                .then((res) => {\n                    console.log(res.data.message);\n                    document.getElementById('mresetReply').click();\n                    Axios.get(\"/query/find\")\n                        .then(res => {\n                            console.log(res.data.message);\n                            this.props.receive(res.data.body);\n                            this.notifyA('Success');\n                            const modal = document.getElementById(\"myModalReply\");\n                            modal.style.display = \"none\";\n                        })\n                },\n                err => {\n                    console.log('Error');\n                    this.notifyB('Error');\n                })\n        } else {\n            console.log('Error');\n            this.notifyB('Error');\n        }\n    }\n\n    notifyA = (text) => toast.success(text, {containerId: 'A'});\n    notifyB = (text) => toast.error(text, {containerId: 'B'});\n\n    render(){\n        return(\n            <Fragment>\n                    <button id=\"myBtnReply\" onClick={this.handleShow} hidden>Open Modal</button>\n                    <ToastContainer enableMultiContainer containerId={'A'} position={toast.POSITION.TOP_CENTER} autoClose={2000}/>\n                    <ToastContainer enableMultiContainer containerId={'B'} position={toast.POSITION.TOP_CENTER} autoClose={2000}/>\n                    <div id=\"myModalReply\" className=\"modal\">\n                        <div className=\"modal-content\">\n                            <div className=\"closecontainer\">\n                                {this.state.curDate}\n                                <div id=\"closeReply\" className=\"close\" onClick={this.handleClose}>&times;</div>\n                            </div>\n                            <form>\n                                <label>Name:</label><br/>\n                                <input type=\"text\" id=\"mnameReply\" size=\"10\"/><br/>\n                                <label>Text:</label><br/>\n                                <textarea id=\"mtextReply\"  cols=\"15\"/><br/>\n                                <div className=\"d-flex justify-content-center\">\n                                    <button type=\"button\" className=\"btn btn-dark m-2\" onClick={this.addMessage}>Add</button>\n                                    <button type=\"reset\" className=\"btn btn-dark m-2\" id=\"mresetReply\">Reset</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n            </Fragment>\n            \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}